{"version":3,"sources":["scripts/bgImgsMove.js"],"names":["window","innerWidth","imgs","document","querySelectorAll","imgBgs","imgBgs226","secWthImgs","callback","entries","forEach","entry","isIntersecting","target","onmousemove","event","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","style","transform","clientX","err","e","f","_step2","_iterator2","clientY","_step3","_iterator3","_step4","observer3","IntersectionObserver","_iterator4","secWthImg","observe"],"mappings":"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","file":"bgImgsMove.be2cdb9b.js","sourceRoot":"../../../src","sourcesContent":["// \n//  двигаем картинки и фон в секциях Hero и Split движением указателя мыши\n// \n\nif (window.innerWidth >= 1024) {\n    const imgs = document.querySelectorAll('.img-on-bg');\n    const imgBgs = document.querySelectorAll('.img-bg');\n    const imgBgs226 = document.querySelectorAll('.img-bg226');\n    const secWthImgs = document.querySelectorAll('.sec-wth-img');\n    \n    function callback (entries) {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting === true) {\n                // entry.target.style.background = 'red';\n                // console.log(entry.target);\n                entry.target.onmousemove = (event) => {\n                    // двигаем сразу все картинки проходясь циклом - чтоб быстрее было описать.\n                    for (let img of imgs) {\n                        img.style.transform = 'translate(' + (-event.clientX * 0.001) + 'rem';\n                    }\n                    for (let imgBg of imgBgs) {\n                        imgBg.style.transform = 'translate(' + (event.clientX * 0.002) + 'rem, ' + (event.clientY * 0.002 - (event.clientX * 0.001)) + 'rem) rotate(44deg)';\n                    }\n                    for (let imgBg of imgBgs226) {\n                        imgBg.style.transform = 'translate(' + (event.clientX * 0.002) + 'rem, ' + (event.clientY * 0.002 - (event.clientX * 0.001)) + 'rem) rotate(-226deg)';\n                    }\n                    }\n            }\n            else {\n                entry.target.onmousemove = null;\n            }\n        });\n    }\n    \n    const observer3 = new IntersectionObserver(callback);\n    \n    for (let secWthImg of secWthImgs) {\n        observer3.observe(secWthImg);\n        // console.log(secWthImg);    \n    }\n}\n\n\n// можно такжк создать отдельные методы для каждой секции и двигать только в ней картинки. Нужно будет сохранять в константы  все картинки ( или найти спсоб обращаться  к HTML детям блоков)\n// const h = document.querySelector('.hero');\n// h.start = () => {\n//                 document.onmousemove = (event) => {\n//                 for (let img of imgs) {\n//                     img.style.transform = 'translate(' + (-event.clientX * 0.001) + 'rem';\n//                 }\n//                 for (let imgBg of imgBgs) {\n//                     imgBg.style.transform = 'translate(' + (event.clientX * 0.002) + 'rem, ' + (event.clientY * 0.002 - (event.clientX * 0.001)) + 'rem) rotate(44deg)';\n//                 }\n//                 for (let imgBg of imgBgs226) {\n//                     imgBg.style.transform = 'translate(' + (event.clientX * 0.002) + 'rem, ' + (event.clientY * 0.002 - (event.clientX * 0.001)) + 'rem) rotate(-226deg)';\n//                 }\n//                 }\n// }\n// const s = document.querySelector('.split');\n\n// observer3.observe(h);\n// observer3.observe(s);\n\n\n\n\n// https://doka.guide/js/intersection-observer/"]}